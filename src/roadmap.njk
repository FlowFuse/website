---
layout: layouts/page.njk
title: Roadmap
description: "<p>Stay up-to-date with our progress and plans on the FlowForge Roadmap.</p><p>Here you can find information about features, improvements, and other changes we're working on.</p>"
heroimg: "./images/pictograms/anvil1.png"
sitemapPriority: 0.8
meta:
    title: Roadmap
---

<style>
    .roadmap-section {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
    }
    .roadmap-item {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        background-color: #f3f4f6;
        border-radius: 8px;
        padding: 12px 20px;
        margin-bottom: 12px;
    }
    .roadmap-item-title-container {
        display: flex;
        align-items: center;
    }
    .roadmap-item-text {
        display: block;
        color: #bc3738;
        font-weight: bold;
        flex-grow: 1;
        text-align: left;
    }
    .roadmap-item a {
        text-decoration: none;
        color: #1f2937;
        flex-grow: 1;
    }
    .roadmap-item .issue-number {
        display: block;
        font-size: 0.9em;
        color: #9ca3af;
        margin-right: 12px;
    }
    .vote-btn {
        display: flex;
        align-items: center;
        justify-content: space-between; /* Added to make space between text and image */
        background-color: #f3f4f6;
        padding: 8px 16px;
        border-radius: 8px;
        text-decoration: none;
        color: #000;
        font-weight: bold;
        transition: 0.3s;
    }
    .vote-btn a {
        color: #000;
    }
    .vote-btn,
    .vote-btn span {
        color: #000;
    }
    .vote-btn img {
        width: 16px;
        height: 16px;
        margin-right: 4px;
    }
    .vote-btn span {
        margin-right: 4px; /* Added to make space between text and image */
    }
    .vote-btn:hover {
        background-color: #e5e7eb;
    }
    .reaction-count {
        display: flex;
        align-items: center;
        margin-left: 8px;
    }
    .reaction-count span {
        margin-left: 4px;
        color: #9ca3af;
    }
    .issue-number {
        color: #7F7F7F;
    }
    .title-number-container {
        display: flex;
        align-items: center;
        margin-bottom: 8px;
    }
</style>
{% include "components/divider-flow--default.njk" %}
<!-- Roadmap Content -->
<div class="about w-full ff-bg-light pt-12 pb-24 md:pb-48 md:pt-32">
    <div class="container m-auto max-w-4xl">
        <div class="grid grid-cols-1 md:grid-cols-3 pt-12 md:pt-24 gap-x-8" style="align-items: flex-start;">
            <div class="roadmap-section consideration pb-6 md:pb-0">
                <h3>Consideration</h3>
                <p>We would appreciate your feedback on the potential new features that we are considering for development.</p>
                <div class="roadmap-item-container"></div>
                <!-- Add this container -->
            </div>
            <div class="roadmap-section progress pb-6 md:pb-0">
                <h3>In Progress</h3>
                <p>We are currently working on the following topics and would appreciate any feedback you may have.</p>
                <div class="roadmap-item-container"></div>
                <!-- Add this container -->
            </div>
            <div class="roadmap-section completed">
                <h3>Newly released</h3>
                <!-- beautify necessary -->
                <p>
                    <a href="https://www.flowforge.com/blog/" target="_blank">
                        Check out product updates on our blog to see the latest features and improvements.
                    </a>
                </p>
                <div class="w-full px-2 pt-2 pb-2 mb-2 flex flex-col border-t-2 border-b-2">
                    <a id="sign-up"></a>
                    <h5 class="mb-0">Sign up for our monthly email updates:</h5>
                    <script>
                        function displayHubSpotForm() {
                            hbspt.forms.create({
                                region: "eu1",
                                portalId: "26586079",
                                formId: "159c173d-dd95-49bd-922b-ff3ef243e90c",
                                onFormSubmit: function ($form) {
                                    capture('cta-blog-subscribe', {'position': 'primary'})
                                }
                            });
                        }
                    </script>
                    <script
                        async="async"
                        type="text/javascript"
                        charset="utf-8"
                        src="//js-eu1.hsforms.net/forms/embed/v2.js"
                        onload="displayHubSpotForm()"></script>
                </div>
            </div>
        </div>
    </div>
</div>
{% include "components/divider-flow--top-red--dark.njk" %}
<!-- Roadmap Feedback -->
<div class="roadmap-feedback w-full ff-bg-dark px-6 pt-12 pb-24 md:pt-20 md:px-0 md:pb-48">
    <div class="container m-auto text-center max-w-4xl">
        <div>
            <h1 class="mb-4">We value your feedback</h1>
            <p>We appreciate feedback and suggestions from our users to help shape the future of FlowForge. Feel free to share your
                thoughts and ideas with us through our community channels or by contacting our team.</p>
            <a href="/contact" class="btn btn-red mt-4">Contact Us</a>
        </div>
    </div>
</div>
{% include "components/divider-flow--top-grey.njk" %}
<!-- Inline JavaScript code -->
    <script>
async function sendGraphQLRequest(query) {
    const url = "https://api.github.com/graphql";
    const options = {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "User-Agent": "FlowForge-Website",
            "Authorization": "Bearer {{ GitHub_Token }}" // Thanks to eleventy edge plugin
        },
        body: JSON.stringify({query})
    };
    try {
        const response = await fetch(url, options);
        const data = await response.json();
        return data;
    } catch (error) {
        console.error("Error fetching GitHub issues:", error);
        return null;
    }
}
async function fetchGitHubIssues(label) {
    const query1 = `
query {
  repository(owner: "flowforge", name: "flowforge") {
    issues(first: 100, states: OPEN, filterBy: { labels: "${label}"}) {
      nodes {
        title
        number
        url
        reactions(content: THUMBS_UP) {
          totalCount
        }
      }
    }
  }
}
`;
    const data = await sendGraphQLRequest(query1);
    return data
        .data
        .repository
        .issues
        .nodes;
}
async function fetchDevIssues() {
    const query2 = `       
query {
  repository(owner: "flowforge", name: "flowforge") {
    milestones(states: OPEN, first: 10) {
      nodes {
        title
        url
        issues(labels: "epic", states: OPEN, first: 100) {
          nodes {
            title
            number
            url
            }
          }
        }
      }
    }
  }
`;
    const data = await sendGraphQLRequest(query2);
    const result = await extractIssues(data.data);
    return result;
}
async function extractIssues(data) {
    let issues = [];
    for (const milestone of data
        .repository
        .milestones
        .nodes) {
        for (const issue of milestone.issues.nodes) {
            issues.push({title: issue.title, number: issue.number, url: issue.url});
        }
    }
    return issues;
}
async function updateRoadmap() {
    const inConsiderationItems = await fetchGitHubIssues("consideration");
    const progressItems = await fetchDevIssues();
    updateRoadmapSection(document.querySelector(".consideration"), inConsiderationItems);
    updateRoadmapSection(document.querySelector(".progress"), progressItems, false);
}
function updateRoadmapSection(element, items, showReactions = true) {
    // Create a container for the list of items
    let listContainer = element.querySelector(".roadmap-item-container");
    if (! listContainer) {
        listContainer = document.createElement("div");
        listContainer.classList.add("roadmap-item-container");
        element.appendChild(listContainer);
    }
    const list = document.createElement("ul");
    for (const item of items) {
        const listItem = document.createElement("li");
        listItem.classList.add("roadmap-item");
        // Create a container for title and number
        const titleNumberContainer = document.createElement("div");
        titleNumberContainer.classList.add("title-number-container");
        const issueName = document.createElement("span");
        issueName.classList.add("roadmap-item-text");
        issueName.textContent = `${
            item.title
        }`;
        // #${item.number} would be possible to add. From design perspective, I like the version without number more Append
        // title and number to the container
        titleNumberContainer.appendChild(issueName);
        listItem.appendChild(titleNumberContainer);
        const voteBtn = document.createElement("a");
        voteBtn.href = item.url;
        voteBtn.target = "_blank";
        voteBtn.classList.add("vote-btn");
        if (showReactions) {
            const reactions = item.reactions.totalCount;
            const reactionCount = document.createElement("span");
            reactionCount.classList.add("reaction-count");
            reactionCount.innerHTML = `üëç <span>${reactions}</span>`;
            voteBtn.innerHTML = `${
                reactionCount.outerHTML
            }<span>Vote on GitHub</span><img src="../images/github-mark.png" alt="GitHub Logo">`;
        } else {
            voteBtn.innerHTML = '<span>See status</span><img src="../images/github-mark.png" alt="GitHub Logo">';
        } listItem.appendChild(voteBtn);
        list.appendChild(listItem);
    }
    // Clear the previous content and append the new list
    listContainer.innerHTML = "";
    listContainer.appendChild(list);
}
// Fetch and display data on page load
updateRoadmap();
// fetch and display data every X milliseconds
setInterval(updateRoadmap, 5 * 60 * 1000);</script>