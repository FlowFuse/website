---
layout: nohero
---
<!-- <script>
    function toggleNavList (el) {
        const li = el.parentElement
        li.classList.toggle('open')
        const ul = li.nextElementSibling
        ul.classList.toggle('open')
        if (ul.style.maxHeight) {
            ul.style.maxHeight = null;
        } else {
            if (ul.parentElement.tagName === "UL" && !ul.parentElement.classList.contains('eleventy-nav')) {
                ul.parentElement.style.maxHeight = "initial"
            }
            ul.style.maxHeight = ul.scrollHeight + "px";
        } 
    }

    document.addEventListener('DOMContentLoaded', function() {
        var navItems = document.querySelectorAll('.eleventy-nav li');

        navItems.forEach(function(navItem) {
            var sublist = navItem.querySelector('ul');
            if (sublist) {
                var button = document.createElement('button');
                button.innerHTML = `
                    <span class="ff-icon icon-expand">
                        {% include "components/icons/chevron-down.svg" %}
                    </span>
                    <span class="ff-icon icon-minimise">
                        {% include "components/icons/chevron-up.svg" %}
                    </span>
                `;
                button.onclick = function() {
                    toggleNavList(button);
                };
                navItem.insertBefore(button, navItem.firstChild);
            }
        });
    });
</script> -->
<div class="w-full bg-white/50">
<div class="eleventy md:grid md:grid-cols-[265px_1fr_auto] flex flex-col-reverse text-left pb-24 md:max-w-screen-xl m-auto">
    {% include "./learning-resources-nav.njk" %}

    <div class="max-w-screen-lg mx-auto px-8 pt-8">
        <!-- Breadcrumbs - Desktop -->
        <div class="hidden w-full mx-auto md:block">
            <div class="font-medium border-b pb-1">
                {% if version %}
                v{{ version }}
                {% endif %}
                {% if page.url %}
                    {{ page.url | handbookBreadcrumbs | safe }}
                {% endif %}
            </div>
        </div>
        <div class="w-full m-auto md:pt-6">
            <div id="algolia-search" class="border rounded"></div>
        </div>
        <div class="w-full mx-auto flex flex-col md:flex-row">
            <!-- Main Content -->
            <div class="flex-grow order-last md:order-first">
                <div class="mt-6 mb-4 prose prose-blue main-content">
                    {{ content | rewriteHandbookLinks(page) | safe }}
                </div>
            </div>
        </div>
    </div>
    <div class="border-l">
        <!-- Breadcrumbs - Mobile -->
        <div class="block px-8 pt-4 w-full mx-auto md:hidden">
            <div class="font-medium border-b pb-1">
                {% if version %}
                v{{ version }}
                {% endif %}
                {% if page.url %}
                    {{ page.url | handbookBreadcrumbs | safe }}
                {% endif %}
            </div>
        </div>
        <!-- Right side bar -->
        <div class="sticky top-6 w-full md:w-64 mt-4 md:mt-6 px-8">
            <h3 class="font-medium border-b pb-1 mb-4">On this page</h3>
            <ul id="toc" class="text-sm border-b mb-4"></ul>
            {%- for maintainer in page | pageOwners | ghUsersToTeamMembers(team) -%}
                {%- if loop.first -%}
                    <h3 class="font-medium border-b pb-1 mb-4">Page maintainer</h3>
                {%- endif -%}

                {% renderTeamMember maintainer %}
            {%- endfor -%}
            <div class="text-sm pb-1 text-right mb-4"><a href="{{ page | handbookEditLink }}">Edit this page</a></div>
            <div class="text-xs pb-1 text-right mb-4 italic">Updated: {% filter shortDate %}{{ updated if updated else page.date }}{% endfilter %}</div>
        </div>
    </div>
</div>
</div>
<script>
    // Generate "On this page"
    let toc = document.getElementById("toc")

    let currentTag = "";
    let currentToc = toc;
    let currentItem;

    let activeTier = 0 // which index to read from the depth
    let depth = [1, 1, 1, 1] // tracks the active number to render at each depth

    document.querySelectorAll(".main-content > h2, .main-content > h3, .main-content > h4").forEach(function(n) {
        // which level of "H_" are we working with, and which one did we see most recently
        const level = parseInt(n.nodeName[1])
        const prevLevel = currentTag.length > 1 ? parseInt(currentTag[1]) : 0

        // Render Table of Contents
        if (prevLevel > 0 && level - prevLevel < 0) {
            // we are moving left with our indent
            currentToc = toc;
        } else if (prevLevel > 0 && level - prevLevel > 0) {
            // we are creating a new, nested `<ul>`
            currentToc = document.createElement("ul");
            currentToc.classList.add("ml-4")
            currentToc.classList.add("mt-2")
            currentToc.classList.add("mb-4")
            currentItem.append(currentToc);
        }
        currentTag = n.nodeName;
        currentItem = document.createElement("li");
        currentItem.classList.add("mb-2")
        let currentLink = document.createElement("a");
        currentItem.append(currentLink);
        let link = n.getElementsByTagName('a')
        currentLink.href = link[0].href;
        currentLink.textContent = n.textContent.replace(/#\s+/g,"");
        currentToc.append(currentItem);
    })

    // All external links open in new page
    document.querySelectorAll("[data-{{nav}}] a").forEach((link) => {
        try {
            if (!link.target && window.location.host !== new URL(link.href).host) {
                link.target = "_blank";
            }
        } catch {
            // Swallow errors
        }
    })
</script>

{% include "./common-js.njk" %}