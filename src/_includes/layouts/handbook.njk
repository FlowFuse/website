---
layout: nohero
date: git Last Modified
---
<script>
    function toggleNavList (el) {
        const li = el.parentElement
        li.classList.toggle('open')
        const ul = li.nextElementSibling
        ul.classList.toggle('open')
        if (ul.style.maxHeight) {
            ul.style.maxHeight = null;
        } else {
            if (ul.parentElement.tagName === "UL" && !ul.parentElement.classList.contains('handbook-nav')) {
                ul.parentElement.style.maxHeight = "initial"
            }
            ul.style.maxHeight = ul.scrollHeight + "px";
        } 
    }
</script>

<div class="handbook ff-prose text-left pb-24" data-{{nav}}>
    <!-- Navigation -->
    <div class="border-r">
        <ul class="handbook-nav" data-el="navigation">
            <li class="{% if "/{{ nav }}/" === page.url %}active{% endif %}">
                <a href="/{{ nav }}">{{ nav }}</a>
            </li>
            {% for group in collections.nav[nav].groups %}
            {% if group.children.length > 0 %}
            <li class="handbook-nav-group">{{ group.name }}</li>
                {% for entry in group.children %}
                <li class="{% if entry.url === page.url %}active{% endif %}">
                    <a href="{{entry.url}}">
                        {{ entry.name }}
                    </a>
                    {% if entry.children %}
                    <button onclick="toggleNavList(this)">
                        <span class="ff-icon icon-expand">
                            {% include "components/icons/chevron-down.svg" %}
                        </span>
                        <span class="ff-icon icon-minimise">
                            {% include "components/icons/chevron-up.svg" %}
                        </span>
                    </button>
                    {% endif %}
                </li>
                {% if entry.children %}
                <ul class="handbook-nav-nested">
                    {% for child in entry.children %}
                    <li class="{% if child.url === page.url %}active{% endif %}">
                        <a href="{{child.url}}">
                            {{ child.name }}
                        </a>
                        {% if child.children %}
                        <button onclick="toggleNavList(this)">
                            <span class="ff-icon icon-expand">
                                {% include "components/icons/chevron-down.svg" %}
                            </span>
                            <span class="ff-icon icon-minimise">
                                {% include "components/icons/chevron-up.svg" %}
                            </span>
                        </button>
                        {% endif %}
                    </li>
                    {% if child.children %}
                    <ul class="handbook-nav-nested-2">
                        {% for grandchild in child.children %}
                        <li class="{% if grandchild.url === page.url %}active{% endif %}">
                            <a href="{{grandchild.url}}">
                                {{ grandchild.name }}
                            </a>
                        </li>
                        {% endfor %}
                    </ul>
                    {% endif %}
                    {% endfor %}
                </ul>
                {% endif %}
                {% endfor %}
            {% endif %}
            {% endfor %}
        </ul>
    </div>
    <div class="max-w-screen-lg mx-auto px-8 pt-8">
        <!-- Breadcrumbs - Desktop -->
        <div class="hidden w-full mx-auto ff-bg-light md:block">
            <div class="font-medium border-b pb-1">
                {% if version %}
                v{{ version }}
                {% endif %}
                {{ page.filePathStem | handbookBreadcrumbs |safe }}
            </div>
        </div>
        <div class="w-full m-auto md:mb-10 md:pt-6">
            <div id="algolia-search" class="border rounded"></div>
        </div>
        <div class="w-full mx-auto ff-bg-light flex flex-col md:flex-row">
            <!-- Main Content -->
            <div class="flex-grow order-last md:order-first">
                <div class="mt-6 mb-4 prose prose-blue main-content">
                    {{ content | rewriteHandbookLinks(page) | safe }}
                </div>
            </div>
        </div>
    </div>
    <div class="border-l">
        <!-- Breadcrumbs - Mobile -->
        <div class="block px-8 pt-4 w-full mx-auto ff-bg-light md:hidden">
            <div class="font-medium border-b pb-1">
                {% if version %}
                v{{ version }}
                {% endif %}
                {{ page.filePathStem | handbookBreadcrumbs | safe }}
            </div>
        </div>
        <!-- Right side bar -->
        <div class="sticky top-6 w-full md:w-64 mt-4 md:mt-6 px-8">
            <h3 class="font-medium border-b pb-1 mb-4">On this page</h3>
            <ul id="toc" class="text-sm border-b mb-4"></ul>
            {%- for maintainer in page | pageOwners | ghUsersToTeamMembers(team) -%}
                {%- if loop.first -%}
                    <h3 class="font-medium border-b pb-1 mb-4">Page maintainer</h3>
                {%- endif -%}

                {% renderTeamMember maintainer %}
            {%- endfor -%}
            <div class="text-sm pb-1 text-right mb-4"><a href="{{ page | handbookEditLink }}">Edit this page</a></div>
            <div class="text-xs pb-1 text-right mb-4 italic">Updated: {{ page.date | shortDate }}</div>
        </div>
    </div>
</div>
<script>
    // Generate "On this page"
    let toc = document.getElementById("toc")

    let currentTag = "";
    let currentToc = toc;
    let currentItem;

    let activeTier = 0 // which index to read from the depth
    let depth = [1, 1, 1, 1] // tracks the active number to render at each depth

    document.querySelectorAll(".main-content > h2, .main-content > h3, .main-content > h4").forEach(function(n) {
        // which level of "H_" are we working with, and which one did we see most recently
        const level = parseInt(n.nodeName[1])
        const prevLevel = currentTag.length > 1 ? parseInt(currentTag[1]) : 0

        // Render Table of Contents
        if (prevLevel > 0 && level - prevLevel < 0) {
            // we are moving left with our indent
            currentToc = toc;
        } else if (prevLevel > 0 && level - prevLevel > 0) {
            // we are creating a new, nested `<ul>`
            currentToc = document.createElement("ul");
            currentToc.classList.add("ml-4")
            currentToc.classList.add("mt-2")
            currentToc.classList.add("mb-4")
            currentItem.append(currentToc);
        }
        currentTag = n.nodeName;
        currentItem = document.createElement("li");
        currentItem.classList.add("mb-2")
        let currentLink = document.createElement("a");
        currentItem.append(currentLink);
        let link = n.getElementsByTagName('a')
        currentLink.href = link[0].href;
        currentLink.textContent = n.textContent.replace(/#\s+/g,"");
        currentToc.append(currentItem);
    })

    // All external links open in new page
    document.querySelectorAll("[data-{{nav}}] a").forEach((link) => {
        try {
            if (!link.target && window.location.host !== new URL(link.href).host) {
                link.target = "_blank";
            }
        } catch {
            // Swallow errors
        }
    })
</script>

<!-- MermaidJS -->
<script type="module">
    import mermaid from "https://cdn.jsdelivr.net/npm/mermaid@10.0.0/dist/mermaid.esm.mjs";
    mermaid.initialize({startOnLoad:true});
</script>

<!-- Clipboard -->
<link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/Primer/19.1.1/tooltips.min.css"  as="style" onload="this.onload=null;this.rel='stylesheet'" crossorigin="anonymous" referrerpolicy="no-referrer" />
{% initClipboardJS %}

<!-- Syntax Highlighting CSS -->
<link rel="preload" href="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism-tomorrow.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'" crossorigin="anonymous" referrerpolicy="no-referrer" />


<link rel="preload"href="https://cdn.jsdelivr.net/npm/@algolia/algoliasearch-netlify-frontend@1/dist/algoliasearchNetlify.css" as="style" onload="this.onload=null;this.rel='stylesheet'" crossorigin="anonymous" referrerpolicy="no-referrer" />
<link rel="preload" href="https://cdn.jsdelivr.net/npm/@algolia/autocomplete-theme-classic" as="style" onload="this.onload=null;this.rel='stylesheet'" crossorigin="anonymous" referrerpolicy="no-referrer" />

<script async type="text/javascript" src="https://cdn.jsdelivr.net/npm/@algolia/algoliasearch-netlify-frontend@1/dist/algoliasearchNetlify.js" onload="initSearchBar()"></script>
<script async type="text/javascript">
  function initSearchBar () {
    algoliasearchNetlify({
        appId: 'KWE0727TZS',
        apiKey: '595ee07f069991380e9c3036cfad8e5e',
        siteId: '00f8cf60-997f-4c4d-9427-a97924358648',
        branch: 'live',
        selector: 'div#algolia-search',
        detached: false
    });
    }
</script>