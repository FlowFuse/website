{% set colors = ["bg-indigo-700 hover:bg-indigo-600", "bg-indigo-800 hover:bg-indigo-700", "bg-indigo-900 hover:bg-indigo-800"] %}
{% set hasFutureEvents = false %}

{% for event in events %}
    {% if event.expire | isFutureDate %}
        {% set hasFutureEvents = true %}
    {% endif %}
{% endfor %}

{% if hasFutureEvents %}
<div class="event-banner-container bg-indigo-700 hidden sm:block">
    {% for event in events %}
        {% if event.expire | isFutureDate %}
            {% set color = colors[loop.index0 % colors.length] %}
            <a href="{{ event.link }}" class="event-banner hidden sm:flex text-center w-full py-1 pb-3 sm:py-3 {{ color }} text-indigo-100 text-sm px-2 gap-1 sm:gap-2 flex-col sm:flex-row items-center justify-center">
                <span class="hidden sm:block font-semibold">{{ event.type }}</span>
                <span class="hidden sm:block">-</span>
                <span class="">{{ event.title }}</span>
                <span class="hidden sm:block">-</span>
                <span class="flex items-center gap-1 font-medium underline" >
                    {{ event.buttonText }} {% include "components/icons/chevron-right-sm.svg" %}
                </span>
            </a>
        {% endif %}
    {% endfor %}
</div>
{% endif %}

<script>
    window.onload = function() {
        const banners = document.querySelectorAll('.event-banner');
        const container = document.querySelector('.event-banner-container');
        
        // If there are no banners, exit the function
        if (banners.length === 0) return;
        
        let currentBanner = 0;

        // Change the container color to match the current banner
        function changeContainerColor(banner) {
            const colorClass = banner.className.match(/bg-\w+-\d+/)[0];
            const hoverColorClass = banner.className.match(/hover:bg-\w+-\d+/)[0];
            container.className = 'event-banner-container ' + colorClass + ' ' + hoverColorClass + ' hidden sm:block';
        }

        // All banners are hidden by default
        banners.forEach(banner => banner.style.visibility = 'hidden');

        // Show the first banner
        banners[0].style.visibility = 'visible';
        changeContainerColor(banners[0]);

        // If there is more than one banner, change the visible banner every 10 seconds
        if (banners.length > 1) {
            setInterval(function() {
                // Hide the current banner
                banners[currentBanner].style.visibility = 'hidden';

                // Increment the current banner index
                currentBanner = (currentBanner + 1) % banners.length;

                // Show the new banner
                banners[currentBanner].style.visibility = 'visible';
                banners[currentBanner].style.animation = 'none'; // reset animation
                // force reflow, triggering a new animation
                void banners[currentBanner].offsetWidth;
                banners[currentBanner].style.animation = 'slideDown 0.5s ease';

                // Change the container color to match the new banner
                setTimeout(function() {
                    changeContainerColor(banners[currentBanner]);
                }, 500); // wait for the slideDown animation to finish
            }, 10000);
        }
    };
</script>
